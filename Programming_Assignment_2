makeCacheMatrix <- function( m = matrix() ) {

# Initialization of inverse
    i <- NULL

    # Matrix set method
    set <- function( matrix ) {
            m <<- matrix
            i <<- NULL
    }

    # Matrix get method
    get <- function() {
    	m
    }

    # Set inverse matrix method
    setInverse <- function(inverse) {
        i <<- inverse
    }

    # Get inverse matrix method
    getInverse <- function() {
        i
    }

    ## Return a list of the methods
    list(set = set, get = get,
         setInverse = setInverse,
         getInverse = getInverse)
}

cacheSolve <- function(x, ...) {

    m <- x$getInverse()

    if( !is.null(m) ) {
            message("getting cached data")
            return(m)
    }
    data <- x$get()
    m <- solve(data) %*% data

    x$setInverse(m)

    # Return the matrix
    m
}
